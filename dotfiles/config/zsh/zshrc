# SET VARIABLES
## Bypass MacOS Gatekeeper for Homebrew Cask Installs
export HOMEBREW_CASK_OPTS="--no-quarantine"
## Set null to use bat instead of cat
export NULLCMD=bat

# CHANGE ZSH OPTIONS

# CREATE ALIASES
## Coloured output for ls and git status using exa
alias ls="exa -laFh --git"
alias exa="exa -laFh --git"
## Syntax highlighting for man (manual) pages using bat-extras
alias man=batman
## Syntax highlighting for grep (search) using bat-extras
alias grep=batgrep
## Shows the path variable, split by newline, in bat (default: cat)
alias trail='<<<${(F)path}'
## Remove to system trash
alias rm=trash
## neovim
alias vi='nvim'
alias vim='nvim'
alias vimdiff='nvim -d'
export EDITOR=nvim

# CUSTOMISE PROMPT(S)
# autoload colors
# colors
# source ~/.dotfiles/dotfiles/config/zsh/themes/over-10k.zsh-theme

# ADD LOCATIONS TO $path Array VARIABLE
typeset -U path
path=(
  $path
  "/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
)

## starship
eval "$(starship init zsh)"

## pyenv
### TODO: This currently seems irrelevant as it does not add anything to $PATH.
# local pyenv_path="$HOME/.pyenv"
# export PYENV_ROOT="$HOME/.pyenv"
# command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"

## puppeteer
export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
export PUPPETEER_EXECUTABLE_PATH=$(which chromium)

## ssh
export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock

## llvm
# Add the LLVM binary directory to the system's PATH for easy access
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"

# Set the LDFLAGS environment variable to specify the LLVM library directory
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"

# Set the CPPFLAGS environment variable to specify the LLVM include directory
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

# WRITE FUNCTIONS
function mkcd() {
  mkdir -p "$@" && cd "$_"
}

function cdls() {
  cd "$@" && command exa
}

# USE ZSH PLUGINS
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.dotfiles/dotfiles/config/zsh/plugins/nvm.zsh

# ...AND OTHER SUPRISES
## Some useful options (man zshoptions)
zle_highlight=('paste:none')

## Basic auto/tab complete:
ZSH_DISABLE_COMPFIX=true
autoload -Uz compinit && compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'm:{a-zA-Z}={A-Za-z} l:|=* r:|=*'
zmodload zsh/complist
_comp_options+=(globdots)

# OS FIXES
## mac
### not all terminals set the $TERM_PROGRAM variable used by neovim

get_term_program() {
  local list=("Apple_Terminal" "iTerm2")
  local current_program="$TERM_PROGRAM"

  if [[ -z "$current_program" || ! "${list[*]}" =~ (^|[[:space:]])"$current_program"($|[[:space:]]) ]]; then
    current_program="$(osascript -e 'tell application "System Events" to name of the first process whose frontmost is true')"
    export TERM_PROGRAM="$current_program"
  fi

  echo "$current_program"
}

# Call the function to set the initial value and export it
TERM_PROGRAM=$(get_term_program)
export TERM_PROGRAM

# Define an alias for the function to be called when accessing $TERM_PROGRAM
alias TERM_PROGRAM=get_term_program
