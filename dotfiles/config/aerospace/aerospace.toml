# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# # You can use it to add commands that run after AeroSpace startup.
# # 'after-startup-command' is run after 'after-login-command'
# # Available commands : https://nikitabobko.github.io/AeroSpace/commands
# after-startup-command = [
#     # JankyBorders has a built-in detection of already running process,
#     # so it won't be run twice on AeroSpace restart
#     'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0 hidpi=on',
# ]
#

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 15

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = 10
outer.right = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'
alt-z = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'
alt-shift-0 = 'balance-sizes'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# alt-1 = 'workspace 1' # In your config, you can drop workspace bindings that you don't need
# alt-2 = 'workspace 2' clashes with Euro symbol (â‚¬)
# alt-3 = 'workspace 3' clashes with pound symbol (#)
# alt-4 = 'workspace 4'
# alt-5 = 'workspace 5'
# alt-6 = 'workspace 6'
# alt-7 = 'workspace 7'
# alt-8 = 'workspace 8'
# alt-9 = 'workspace 9'
# alt-a = 'workspace A'
alt-b = 'workspace B' # mnemonics B - Business
alt-c = 'workspace C' # mnemonics C - Chat
alt-d = 'workspace D' # mnemonics D - Default
# alt-e = 'workspace E'
# alt-f = 'workspace F'
# alt-g = 'workspace G'
alt-i = 'workspace I' # mnemonics I - IDE
alt-m = 'workspace M' # mnemonics M - Media player (music / video)
# alt-n = 'workspace N'
# alt-o = 'workspace O'
# alt-p = 'workspace P'
# alt-q = 'workspace Q'
# alt-r = 'workspace R'
# alt-s = 'workspace S'
alt-t = 'workspace T' # mnemonics T - Terminal
# alt-u = 'workspace U'
# alt-v = 'workspace V'
alt-w = 'workspace W' # mnemonics W - Web browser
# alt-x = 'workspace X'
# alt-y = 'workspace Y'
# alt-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# alt-shift-a = 'move-node-to-workspace A'
alt-shift-b = 'move-node-to-workspace B' # mnemonics B - Business
alt-shift-c = 'move-node-to-workspace C' # mnemonics C - Chat
alt-shift-d = 'move-node-to-workspace D' # mnemonics D - Default
# alt-shift-e = 'move-node-to-workspace E'
# alt-shift-f = 'move-node-to-workspace F'
# alt-shift-g = 'move-node-to-workspace G'
alt-shift-i = 'move-node-to-workspace I' # mnemonics I - IDE
alt-shift-m = 'move-node-to-workspace M' # mnemonics M - Media player (music / video)
# alt-shift-n = 'move-node-to-workspace N'
# alt-shift-o = 'move-node-to-workspace O'
# alt-shift-p = 'move-node-to-workspace P'
# alt-shift-q = 'move-node-to-workspace Q'
# alt-shift-r = 'move-node-to-workspace R'
# alt-shift-s = 'move-node-to-workspace S'
alt-shift-t = 'move-node-to-workspace T' # mnemonics T - Terminal
# alt-shift-u = 'move-node-to-workspace U'
# alt-shift-v = 'move-node-to-workspace V'
alt-shift-w = 'move-node-to-workspace W' # mnemonics W - Web browser
# alt-shift-x = 'move-node-to-workspace X'
# alt-shift-y = 'move-node-to-workspace Y'
# alt-shift-z = 'move-node-to-workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-backtick = [
    'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace next --wrap-around',
]
alt-shift-backtick = [
    'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace prev --wrap-around',
]

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
    'layout floating tiling',
    'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# Window rules
# https://nikitabobko.github.io/AeroSpace/guide#callbacks
#
# To get app-id:
# - https://nikitabobko.github.io/AeroSpace/goodness#popular-apps-ids
# - `aerospace list-apps`
[[on-window-detected]]
if.app-id = 'com.apple.finder' # Finder
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Preview' #Preview
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.iCal' # Calendar
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.calculator' # Calculator
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Dictionary' # Dictionary
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.DiskUtility' # Disk Utility
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.AddressBook' # Contacts
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.clock' # Clock
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor' # Activity Monitor
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.todoist.mac.Todoist' # Todoist
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.sindresorhus.Velja' # Velja
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.1password.1password' # 1Password
run = 'layout floating'

[[on-window-detected]]
if.window-title-regex-substring = ' - WhatsApp video call' # WhatsApp (Video Call)
run = 'layout floating'

[[on-window-detected]]
if.window-title-regex-substring = ' - WhatsApp voice call' # WhatsApp (Voice Call)
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'                    # Microsoft Teams
run = ['layout floating', 'move-node-to-workspace B'] # mnemonics B - Business

[[on-window-detected]]
# if.app-id = 'com.microsoft.edgemac' # Microsoft Edge
if.window-title-regex-substring = '.* - Microsoft Edge - Finevalley(?: \(Admin\))?$'
run = ['layout floating', 'move-node-to-workspace B']                                # mnemonics B - Business

[[on-window-detected]]
if.app-id = 'com.microsoft.Word'                      # Microsoft Word
run = ['layout floating', 'move-node-to-workspace B'] # mnemonics B - Business

[[on-window-detected]]
if.app-id = 'com.microsoft.Excel'                     # Microsoft Excel
run = ['layout floating', 'move-node-to-workspace B'] # mnemonics B - Business

[[on-window-detected]]
if.app-id = 'com.microsoft.Powerpoint'                # Microsoft PowerPoint
run = ['layout floating', 'move-node-to-workspace B'] # mnemonics B - Business

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp' # WhatsApp
run = 'move-node-to-workspace C'    # mnemonics C - Chat

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS' # Messages
run = 'move-node-to-workspace C'  # mnemonics C - Chat

[[on-window-detected]]
if.app-id = 'im.beeper'          # Beep
run = 'move-node-to-workspace C' # mnemonics C - Chat

[[on-window-detected]]
if.app-id = 'com.codeux.apps.textual' # Textual
run = 'move-node-to-workspace C'      # mnemonics C - Chat

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode' # Visual Studio Code
run = 'move-node-to-workspace I'   # mnemonics I - IDE

[[on-window-detected]]
if.app-id = 'com.apple.dt.Xcode' # Xcode
run = 'move-node-to-workspace I' # mnemonics I - IDE

[[on-window-detected]]
if.app-id = 'com.apple.ScriptEditor2' # Script Editor
run = 'move-node-to-workspace I'      # mnemonics I - IDE

[[on-window-detected]]
if.app-id = 'com.spotify.client' # Spotify
run = 'move-node-to-workspace M' # mnemonics M - Media player (music / video)

[[on-window-detected]]
if.app-id = 'com.apple.Music'    # Music
run = 'move-node-to-workspace M' # mnemonics M - Media player (music / video)

[[on-window-detected]]
if.app-id = 'org.alacritty'      # Alacritty
run = 'move-node-to-workspace T' # mnemonics T - Terminal

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty' # Ghostty
run = 'move-node-to-workspace T'    # mnemonics T - Terminal

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser' # Arc
# run = 'move-node-to-workspace W' # mnemonics W - Web browser
run = 'layout floating' # Figure out how to split 

[[on-window-detected]]
if.app-id = 'com.apple.Safari'   # Safari
run = 'move-node-to-workspace W' # mnemonics W - Web browser

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox' # Firefox
run = 'move-node-to-workspace W'  # mnemonics W - Web browser

[[on-window-detected]]
if.app-id = 'com.google.Chrome'  # Chrome
run = 'move-node-to-workspace W' # mnemonics W - Web browser

[[on-window-detected]]
run = [
    'layout floating',
    # 'move-node-to-workspace D',
] # by default float all windows not specified above
